[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "pyrtid"
dynamic = ["version"]
authors = [{ name = "Antoine Collet", email = "antoinecollet5@gmail.com" }]
readme = "README.rst"
description = "Reactive Transport Inversion demonstrator written in Python."
keywords = [
    "Inversion",
    "Gradient descent",
    "Reactive transport",
    "Parameters estimation",
    "Adjoint State",
    "Demonstrator",
]
license = { text = "MIT license" }
dependencies = [
    "numpy>=1.2,<2.0",
    "scipy>=1.12.2",
    "scikit-sparse",
    "numdifftools",
    "gstools",
    "numba",
    "typing_extensions",
    "pyesmda@git+https://gitlab.com/antoinecollet5/pyesmda.git@features/imp_inversions",
    "stochopy",
    "iterative_ensemble_smoother~=0.2.6",
    "typing_extensions",
    "matplotlib>=3.5.1",
    "joblib",
    "gstools",
    "nested_grid_plotter",
    "lbfgsb>=0.1.1",
]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://pypi.org/project/pyrtid/"
Documentation = "https://pyrtid.readthedocs.io/en/latest/"
Repository = "https://github.com/antoinecollet5/pyrtid"
Issues = "https://github.com/antoinecollet5/pyrtid/issues"
Changelog = "https://github.com/antoinecollet5/pyrtid/blob/master/CHANGELOG.rst"

[tool.setuptools]
py-modules = []
packages = ["pyrtid"]

[tool.setuptools.dynamic]
version = { attr = "pyrtid.__about__.__version__" }

[tool.ruff]
lint.select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
]
src = ["src", "tests", "docs"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["A", "B", "C", "D", "E", "F", "I"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.12.
target-version = "py312"

[tool.pylint.LOGGING]
# Format style used to check logging format string. `old` means using %
# formatting, `new` is for `{}` formatting,and `fstr` is for f-strings.
logging-format-style = "fstr"
